source input:
<<< ADDITION
    EXAMPLES >>>
let value-1 = 1
let value-2 = value-1 + 1

let value-3 = {
    let result = value-1 + value-2
    result
}

let value-4 = {
    let value-4 = value-1 + value-1 + value-1
    value-4 + 1
}

parse_source result:
<let value-1 = 1 let value-2 = value-1 + 1 let value-3 = {let result = value-1 + value-2 result} let value-4 = {let value-4 = value-1 + value-1 + value-1 value-4 + 1}>

preprocess result:
<(let value-1 = 1) (let value-2 = (value-1 + 1)) (let value-3 = {(let result = (value-1 + value-2)) result}) (let value-4 = {(let value-4 = ((value-1 + value-1) + value-1)) (value-4 + 1)})>

parse result:
{(let value-1 = [int 1]) (let value-2 = (+ [var value-1] [int 1])) (let value-3 = {(let result = (+ [var value-1] [var value-2])) [var result]}) (let value-4 = {(let value-4 = (+ (+ [var value-1] [var value-1]) [var value-1])) (+ [var value-4] [int 1])})}

types:
{(let value-1 = [int 1]) (let value-2 = (+ [var value-1] [int 1])) (let value-3 = {(let result = (+ [var value-1] [var value-2])) [var result]}) (let value-4 = {(let value-4 = (+ (+ [var value-1] [var value-1]) [var value-1])) (+ [var value-4] [int 1])})}: unknown
(let value-1 = [int 1]): unknown
[int 1]: int
(let value-2 = (+ [var value-1] [int 1])): unknown
(+ [var value-1] [int 1]): int
+: (int int -> int)
[var value-1]: int
[int 1]: int
(let value-3 = {(let result = (+ [var value-1] [var value-2])) [var result]}): unknown
{(let result = (+ [var value-1] [var value-2])) [var result]}: int
(let result = (+ [var value-1] [var value-2])): unknown
(+ [var value-1] [var value-2]): int
+: (int int -> int)
[var value-1]: int
[var value-2]: int
[var result]: int
(let value-4 = {(let value-4 = (+ (+ [var value-1] [var value-1]) [var value-1])) (+ [var value-4] [int 1])}): unknown
{(let value-4 = (+ (+ [var value-1] [var value-1]) [var value-1])) (+ [var value-4] [int 1])}: int
(let value-4 = (+ (+ [var value-1] [var value-1]) [var value-1])): unknown
(+ (+ [var value-1] [var value-1]) [var value-1]): int
+: (int int -> int)
(+ [var value-1] [var value-1]): int
+: (int int -> int)
[var value-1]: int
[var value-1]: int
[var value-1]: int
(+ [var value-4] [int 1]): int
+: (int int -> int)
[var value-4]: int
[int 1]: int

C output:
#include "specs_runtime.h"
int _USER_MAIN() 
{
{ int value__1 = 1;int value__2 = (value__1 + 1);int _bindseq_1;{ int result = (value__1 + value__2);_bindseq_1 = result; };int value__3 = _bindseq_1;;int _bindseq_2;{ int value__4 = ((value__1 + value__1) + value__1);_bindseq_2 = (value__4 + 1); };int value__4 = _bindseq_2;; }
}
