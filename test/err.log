   Compiling specs v0.0.0 (C:\Users\Rajin\git\specs)
warning: unreachable pattern
   --> src\language\symbols.rs:79:19
    |
79  |                   $($name => true,)*
    |                     ^^^^^
...
88  | /     symbols![
89  | |         "not" => NOT,
90  | |         "&" => REFERENCE,
91  | |         "&mut" => MUTABLE_REFERENCE,
...   |
110 | |         "xor" => XOR
111 | |     ];
    | |______- in this macro invocation
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: unreachable pattern
   --> src\parser\mod.rs:250:9
    |
250 |         _ =>
    |         ^

warning: unused variable: `function`
  --> src\language\nodes.rs:90:9
   |
90 |         function: fn(&mut Node, &mut TParams),
   |         ^^^^^^^^ help: consider prefixing with an underscore: `_function`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `params`
  --> src\language\nodes.rs:91:9
   |
91 |         params: &mut TParams,
   |         ^^^^^^ help: consider prefixing with an underscore: `_params`

warning: unused variable: `data`
   --> src\language\nodes.rs:109:27
    |
109 |             Node::Integer(data) =>
    |                           ^^^^ help: consider prefixing with an underscore: `_data`

warning: unused variable: `data`
   --> src\language\nodes.rs:111:28
    |
111 |             Node::Variable(data) =>
    |                            ^^^^ help: consider prefixing with an underscore: `_data`

warning: unused variable: `data`
   --> src\language\nodes.rs:114:37
    |
114 |             Node::PrimitiveOperator(data) =>
    |                                     ^^^^ help: consider prefixing with an underscore: `_data`

warning: method is never used: `set_data_type`
  --> src\language\types.rs:12:5
   |
12 |     pub fn set_data_type(&mut self, new_data_type: DataType)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: method is never used: `is_known`
  --> src\language\types.rs:22:5
   |
22 |     pub fn is_known(&self) -> bool
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variant is never constructed: `InvalidSymbol`
 --> src\parser\errors.rs:9:5
  |
9 |     InvalidSymbol(String),
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: method is never used: `get_local_symbols`
  --> src\type_checker\infer_types.rs:26:5
   |
26 |     pub fn get_local_symbols(&self) -> &LocalSymbolTable
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method is never used: `get_local_symbols_mut`
  --> src\type_checker\infer_types.rs:35:5
   |
35 |     pub fn get_local_symbols_mut(&mut self) -> &mut LocalSymbolTable
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused `std::result::Result` that must be used
  --> src\main.rs:77:25
   |
77 |                         fs::write(input_path.replace(".sp", ".c"), c_string);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_must_use)]` on by default
   = note: this `Result` may be an `Err` variant, which should be handled

    Finished dev [unoptimized + debuginfo] target(s) in 0.94s
     Running `C:\Users\Rajin\git\specs\target\debug\specs.exe test.sp`
